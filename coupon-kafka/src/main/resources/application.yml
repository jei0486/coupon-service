spring:
  ################## Kafka ##################
  kafka:
    defaultBootstrapServers: 172.25.17.216:9092
    consumer:
      commonConfig:
        bootstrapServers: ${spring.kafka.defaultBootstrapServers}
        groupId: Coupon
        clientId: Coupon
        timeoutMs: 15000
        fetchMinBytes: 1
        fetchMaxWaitMs: 500
      ############## 쿠폰 Consumer 설정
      timeAttackCouponConsumerConfig:
        topic: TimeAttackCouponIssue
      notificationExpireCouponConsumerConfig:
        topic: NotificationExpireCoupon
  ################## Redis ##################
  redis:
    host: localhost
    port: 6379
  ################## Datasource ##################
  datasource:
    url: jdbc:oracle:thin:@localhost:1521:XE
    username: C##NSMALL
    password: 1234
    driverClassName: oracle.jdbc.driver.OracleDriver
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
    hibernate:
      ddl-auto: none
################## actuator management ##################
management:
  endpoint:
    web:
      exposure:
        include: "*"
        # include: "metrics, prometheus"
        # include : "*" 으로 설정하게되면 모든 설정을 모니터링 할수 있게된다.

server:
  port: 8082


logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.type: TRACE